import java.util.Scanner;
/*
–ü–æ–º–æ–≥–∏—Ç–µ –°—Ç–∞—Ä–æ–π –ñ–∞–±–µ üê∏ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ—Ä–æ–≥—É. –û–Ω–∞ –Ω–µ–∑–Ω–∞–∫–æ–º–∞ —Å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è, –Ω–æ –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–¥ –Ω–∞ Java (–ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –î–∂–∞-–∞-–∞–≤–∞).
–í–æ—Ç –ø—è—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –¥–ª—è –ø–µ—à–µ—Ö–æ–¥–∞:

–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –¥–æ—Ä–æ–≥—É —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–µ—à–µ—Ö–æ–¥–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –∏–ª–∏ –≤ –º–µ—Å—Ç–∞—Ö, –≥–¥–µ —ç—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –¥–æ—Ä–æ–≥—É –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π —Å–≤–µ—Ç —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞.

–ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –¥–æ—Ä–æ–≥–∏ –Ω–µ –ø–æ –ø–µ—Ä–µ—Ö–æ–¥–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤. –°–º–æ—Ç—Ä–∏—Ç–µ –≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–µ –ø—Ä–∏–±–ª–∏–∂–∞—é—Ç—Å—è –∫ –º–µ—Å—Ç—É –ø–µ—Ä–µ—Ö–æ–¥–∞.

–ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª–æ—Å –Ω–∞ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ –¥–æ—Ä–æ–≥–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞–ª–µ–≤–æ, –∞ –ø–æ—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–æ.

–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ–±–µ–≥–∞–π—Ç–µ –¥–æ—Ä–æ–≥—É –≤–±–ª–∏–∑–∏ –ø–æ–≤–æ—Ä–æ—Ç–æ–≤, –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–æ–≤ –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞. –í —ç—Ç–∏—Ö –º–µ—Å—Ç–∞—Ö –≤–æ–¥–∏—Ç–µ–ª–∏ –Ω–µ –≤—Å–µ–≥–¥–∞ –≤–∏–¥—è—Ç –ø–µ—à–µ—Ö–æ–¥–æ–≤ –∏ –º–æ–≥—É—Ç –Ω–µ —É—Å–ø–µ—Ç—å –∑–∞—Ç–æ—Ä–º–æ–∑–∏—Ç—å –≤ —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.

–°–æ—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º –Ω–∞ –¥–æ—Ä–æ–≥–µ –ñ–∞–±–∞ –ø—Ä–∏–º–µ—Ç —Ä–µ—à–µ–Ω–∏–µ, –º–æ–∂–Ω–æ –ª–∏ —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–π—Ç–∏ –¥–æ—Ä–æ–≥—É. –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—è—Å–Ω—è–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞.
*/

public class Practicum {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        boolean isTrafficLightGreen = false;

        boolean isVehicleApproaching = false;

        System.out.println("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –æ–∫–æ–ª–æ –ø–µ—à–µ—Ö–æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ (–¥–∞/–Ω–µ—Ç)?");
        String onCrosswalk = scanner.nextLine();
        boolean isOnCrosswalk = onCrosswalk.equals("–¥–∞"); // –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –æ—Ç–≤–µ—Ç–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–æ

        if (isOnCrosswalk) {
            // –ï—Å–ª–∏ –ø–µ—à–µ—Ö–æ–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—à–µ—Ö–æ–¥–Ω–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ:
            System.out.println("–ì–æ—Ä–∏—Ç –ª–∏ –∑–µ–ª—ë–Ω—ã–π —Å–∏–≥–Ω–∞–ª —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞ (–¥–∞/–Ω–µ—Ç)?");
            String trafficLightGreen = scanner.nextLine();
            isTrafficLightGreen = trafficLightGreen.equals("–¥–∞");
            if (!(isTrafficLightGreen)) {
                // –ï—Å–ª–∏ —Å–≤–µ—Ç–æ—Ñ–æ—Ä –∫—Ä–∞—Å–Ω—ã–π:
                System.out.println("–ù–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –¥–æ—Ä–æ–≥—É –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π —Å–≤–µ—Ç —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞!");
            }
        } else {
            // –ï—Å–ª–∏ –∫ –ø–µ—à–µ—Ö–æ–¥—É –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ:
            System.out.println("–í–∏–¥–∏—Ç–µ –ª–∏ –≤—ã –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏–µ—Å—è –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ (–¥–∞/–Ω–µ—Ç)?");
            String vehicleApproaching = scanner.nextLine();
            isVehicleApproaching = vehicleApproaching.equals("–¥–∞");
            if (isVehicleApproaching) {
                System.out.println("–î–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ –ø—Ä–æ–µ–¥–µ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ!");
            }
        }

        boolean isSafePlace = false;

        if(!(isSafePlace)) {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ–±–µ–∂–∫—É –¥–æ—Ä–æ–≥–∏ –≤ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ:
            System.out.println("–ù–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –≤–±–ª–∏–∑–∏ –≤–∞—Å –ø–æ–≤–æ—Ä–æ—Ç (–ü), –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ (–ê), –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–æ–∫ (–•) –∏–ª–∏ –Ω–µ—Ç?");
            String unsafePlaceType = scanner.nextLine();
            switch (unsafePlaceType) {
                case ("–ü"):
                    System.out.println("–ù–µ –ø–µ—Ä–µ–±–µ–≥–∞–π—Ç–µ –¥–æ—Ä–æ–≥—É –≤–±–ª–∏–∑–∏ –ø–æ–≤–æ—Ä–æ—Ç–æ–≤!");
                    break;

                case ("–•"):
                    System.out.println("–ù–µ –ø–µ—Ä–µ–±–µ–≥–∞–π—Ç–µ –¥–æ—Ä–æ–≥—É –≤–±–ª–∏–∑–∏ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–æ–≤!");
                    break;
                case ("–ê"):
                    System.out.println("–ù–µ –ø–µ—Ä–µ–±–µ–≥–∞–π—Ç–µ –¥–æ—Ä–æ–≥—É –≤–±–ª–∏–∑–∏ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞!");
                    break;
                default:
                    isSafePlace = true;

            }
        }

        if(isTrafficLightGreen && (!isOnCrosswalk && !isVehicleApproaching && isSafePlace)) {
            System.out.println("–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ—Ä–æ–≥—É!");
            System.out.println("–°–∫–æ–ª—å–∫–æ –ø–æ–ª–æ—Å –¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞ –¥–æ—Ä–æ–≥–µ?");
            int linesCount = scanner.nextInt();
            if(linesCount == 1){
                System.out.println("–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ.");
            } else {
                int halfWay = linesCount / 2;
                for(int line = 1; line <= linesCount; line++){
                    if(halfWay >= line){
                        System.out.println("–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞–ª–µ–≤–æ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ.");

                    } else {
                        System.out.println("–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–æ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ.");
                    }

                }
            }
        } else {
            System.out.println("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ—Ä–æ–≥—É –≤ —ç—Ç–æ–º –º–µ—Å—Ç–µ!");
        }
    }
}